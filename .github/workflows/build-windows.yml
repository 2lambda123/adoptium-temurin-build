name: 'Build (windows)'

on:
  workflow_call:

jobs:
  build_windows:
    name: Windows
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        version: [jdk8u, jdk11u, jdk17u, jdk]
        variant: [temurin]

    env:
      VS2017_URL: "https://github.com/akashche/msvs_2017_installer_bootstrap/raw/master/vs_community__7955ddbf8a9b49dda0f8d18876e93bd2.exe"

    steps:
    - uses: actions/checkout@v2
      with:
        set-safe-directory: false

    - name: Get Cygwin
      if: matrix.version != 'jdk'
      uses: ./.github/actions/get-cygwin

    # MYSYS2 is a much faster way to build OpenJDK on Windows
    - name: Get MSYS2
      if: matrix.version == 'jdk'
      uses: ./.github/actions/get-msys2

    - uses: actions/setup-java@v3
      id: setup-java7
      with:
        distribution: 'zulu'
        java-version: 7
      if: matrix.version == 'jdk8u'

    - uses: actions/setup-java@v3
      id: setup-java11
      with:
        distribution: 'temurin'
        java-version: 11

    - name: Restore Visual Studio 2017 from cache
      id: vs2017
      if: matrix.version == 'jdk8u'
      uses: actions/cache@v2
      with:
        path: ~/vs2017.exe
        key: vs2017

    - name: Uninstall WinSDKs
      if: matrix.version == 'jdk8u'
      run: >
        Start-Process -FilePath 'C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe' -Wait -NoNewWindow -ArgumentList
        'modify --installPath "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
        --remove Microsoft.VisualStudio.Component.Windows10SDK.18362
        --remove Microsoft.VisualStudio.Component.Windows10SDK.19041
        --remove Microsoft.VisualStudio.Component.Windows10SDK.20348
        --remove Microsoft.VisualStudio.Component.Windows10SDK.22000
        --quiet'

    - name: Download Visual Studio 2017
      run: |
        curl -L "$env:VS2017_URL" -o "$HOME/vs2017.exe"
      if: steps.vs2017.outputs.cache-hit != 'true' && matrix.version == 'jdk8u'

    - name: Install Visual Studio 2017
      if: matrix.version == 'jdk8u'
      run: >
        Start-Process -FilePath "$HOME\vs2017.exe" -Wait -NoNewWindow -ArgumentList
        'install --productId Microsoft.VisualStudio.Product.Community --channelId VisualStudio.15.Release
        --add Microsoft.VisualStudio.Workload.NativeDesktop
        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64
        --add Microsoft.VisualStudio.Component.Windows10SDK.17763
        --quiet --wait'

    - name: Install Git
      run: |
        Invoke-WebRequest 'https://github.com/git-for-windows/git/releases/download/v2.14.3.windows.1/Git-2.14.3-64-bit.exe' -OutFile 'C:\temp\git.exe'
        Start-Process -Wait -FilePath 'C:\temp\git.exe' -ArgumentList '/SILENT /ALLOWDOWNGRADE=1** /COMPONENTS="icons,ext\reg\shellhere,assoc,assoc_sh"'

    - name: Set PATH
      if: matrix.version != 'jdk'
      run: echo "C:\cygwin64\bin;C:\Program Files\Git\bin;" | Out-File -FilePath "$env:GITHUB_PATH" -Encoding utf8 -Append

    - name: Cygwin git configuration
      if: matrix.version != 'jdk'
      shell: bash
      run: mkdir "$HOME" && git config --system core.autocrlf false && git config --global --add safe.directory '*'

    - name: Setup 8dot3name
      run: fsutil behavior set disable8dot3 0

    - name: Set JAVA_HOME
      run: echo "JAVA_HOME=$(cygpath "${{ steps.setup-java11.outputs.path }}")" | Out-File -FilePath "$env:GITHUB_ENV" -Encoding utf8 -Append

    - name: Set JDK7_BOOT_DIR
      run: echo "JDK7_BOOT_DIR=$(cygpath "${{ steps.setup-java7.outputs.path }}")" | Out-File -FilePath "$env:GITHUB_ENV" -Encoding utf8 -Append
      if: matrix.version == 'jdk8u'

    - name: Hold ANT_HOME value (from GH) to ANT_HOME2
      run: echo "ANT_HOME_ORIGIN=${env:ANT_HOME}" | Out-File -FilePath "$env:GITHUB_ENV" -Encoding utf8 -Append

    - name: Export ANT to PATH(GITHUB_ENV)
      run: echo "ANT_HOME=$(cygpath "${env:ANT_HOME}")" | Out-File -FilePath "$env:GITHUB_ENV" -Encoding utf8 -Append

    - name: Append ANT_HOME to PATH
      run: |
        "${env:ANT_HOME}/bin" >> ${env:GITHUB_PATH}
      shell: pwsh

    - name: Build Windows
      run: |
        bash build-farm/make-adopt-build-farm.sh
      shell: cmd
      env:
        JAVA_TO_BUILD: ${{ matrix.version }}
        ARCHITECTURE: x64
        VARIANT: ${{ matrix.variant }}
        TARGET_OS: windows
        FILENAME: OpenJDK.zip

    - name: 'Upload bundles'
      uses: ./.github/actions/upload-bundles
      with:
        os: ${{matrix.os}}
        version: ${{ matrix.version }}
        variant: ${{ matrix.variant }}

    - name: Smoke Test
      uses: ./.github/actions/smoke-test
      with:
        os: ${{matrix.os}}
        version: ${{ matrix.version }}
        variant: ${{ matrix.variant }}
