name: 'Smoke Test'
description: 'Run Smoke Test'
inputs:
  os:
    description: 'OS to test'
    required: true
  version:
    description: 'Version to test'
    required: true
  variant:
    description: 'Variant to test'
    required: true

runs:
  using: composite
  steps:
    - name: Unpack jdk
      if: inputs.os != 'windows'
      run: |
        mkdir -p "${HOME}/JDK"
        tar -xf "${GITHUB_WORKSPACE}/workspace/target/OpenJDK.tar.gz" -C "${HOME}/JDK"
      shell: bash

    - name: Unpack jdk
      if: inputs.os == 'windows'
      run: |
        unzip "${HOME}/${{matrix.version}}-${{matrix.os}}-${{matrix.variant}}/OpenJDK.zip" -d "${HOME}/${{matrix.version}}-${{matrix.os}}-${{matrix.variant}}"
      shell: pwsh

    - name: Set root of jdk image dir
      if: inputs.os != 'windows'
      run: |
        imageroot=$(find "${HOME}/JDK" -name release -type f)
        echo "TEST_JDK_HOME=$(dirname "${imageroot}")" >> "$GITHUB_ENV"
      shell: bash

    - name: Set root of jdk image dir
      if: inputs.os == 'windows'
      run: |
        $imageroot=$(find "${HOME}/${{matrix.version}}-${{matrix.os}}-${{matrix.variant}}" -name release -type f)
        echo "TEST_JDK_HOME=$(dirname "${imageroot}")" | Out-File -FilePath "$env:GITHUB_ENV" -Encoding utf8 -Append
      shell: pwsh

    - name: Reset ANT_HOME from ANT_HOME_ORIGIN for smoke test
      if: inputs.os == 'windows'
      run: echo "ANT_HOME=${env:ANT_HOME_ORIGIN}" | Out-File -FilePath "$env:GITHUB_ENV" -Encoding utf8 -Append
      shell: pwsh

    - name: Smoke test
      uses: adoptium/run-aqa@v1
      with:
        build_list: 'functional/buildAndPackage'
        target: '_extended.functional'
        vendor_testRepos: "${{ github.event.pull_request.head.repo.html_url }}.git"
        vendor_testBranches: "${{ github.head_ref }}"
        vendor_testDirs: "/test/functional"

    - uses: actions/upload-artifact@v2
      name: Collect and Archive SmokeTest Results
      if: failure()
      with:
        name: "${{inputs.version}}-${{inputs.os}}-${{inputs.variant}}_test_output"
        path: ./**/output_*/
