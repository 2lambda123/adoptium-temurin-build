name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_linux:
    name: Linux
    runs-on: ubuntu-latest
    container:
      image: adoptopenjdk/centos7_build_image
    strategy:
      matrix:
        version: [jdk8u, jdk11u, jdk15u, jdk]
        vm: [hotspot, openj9]

    steps:
    - uses: actions/checkout@v2
        
    - name: Build Linux
      run: ./build-farm/make-adopt-build-farm.sh
      env:
        JAVA_TO_BUILD: ${{ matrix.version }}
        ARCHITECTURE: x64
        VARIANT: ${{ matrix.vm }}
        TARGET_OS: linux
        FILENAME: OpenJDK.tar.gz

  build_macos:
    name: macOS
    runs-on: macos-latest
    strategy:
      matrix:
        version: [jdk8u, jdk11u, jdk15u, jdk]
        vm: [hotspot, openj9]

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        brew install bash binutils freetype gnu-sed nasm

    - uses: actions/setup-java@v1
      id: setup-java
      with:
        java-version: 7
      if: matrix.version == 'jdk8u'
        
    - name: Build macOS
      run: |
        export JAVA_HOME=$JAVA_HOME_11_X64
        # Skip freetype build on jdk11+
        if [ ${{ matrix.version }} != "jdk8u" ]; then
          export BUILD_ARGS="--skip-freetype"
        fi
        ./build-farm/make-adopt-build-farm.sh
      env:
        JAVA_TO_BUILD: ${{ matrix.version }}
        ARCHITECTURE: x64
        VARIANT: ${{ matrix.vm }}
        TARGET_OS: mac
        FILENAME: OpenJDK.tar.gz
        JDK7_BOOT_DIR: ${{ steps.setup-java.outputs.path }}

  build_windows:
    name: Windows
    runs-on: windows-2016
    strategy:
      matrix:
        version: [jdk8u, jdk11u, jdk15u, jdk]
        vm: [hotspot, openj9]

    steps:
    - uses: actions/setup-java@v1
      id: setup-java
      with:
        java-version: 7
      if: matrix.version == 'jdk8u'

    - name: Install Cygwin
      run: |
        Invoke-WebRequest -UseBasicParsing 'https://cygwin.com/setup-x86_64.exe' -OutFile 'C:\temp\cygwin.exe'
        Start-Process -Wait -FilePath 'C:\temp\cygwin.exe' -ArgumentList '--packages wget,bsdtar,rsync,gnupg,git,autoconf,make,gcc-core,mingw64-x86_64-gcc-core,unzip,zip,cpio,curl,grep,perl --quiet-mode --download --local-install --delete-orphans --site https://mirrors.kernel.org/sourceware/cygwin/ --local-package-dir C:\cygwin_packages --root C:\cygwin64'
        # change git config to not replace Line endings
        C:\cygwin64\bin\git config --system core.autocrlf false

    - name: Install Git
      run: |
        Invoke-WebRequest 'https://github.com/git-for-windows/git/releases/download/v2.14.3.windows.1/Git-2.14.3-64-bit.exe' -OutFile 'C:\temp\git.exe'
        Start-Process -Wait -FilePath 'C:\temp\git.exe' -ArgumentList '/SILENT /ALLOWDOWNGRADE=1** /COMPONENTS="icons,ext\reg\shellhere,assoc,assoc_sh"'

    - name: Set PATH
      run: echo '::add-path::C:\cygwin64\bin;C:\Program Files\Git\bin;'

    - name: Install Cuda
      run: |
        Invoke-WebRequest -UseBasicParsing 'https://developer.nvidia.com/compute/cuda/9.0/Prod/network_installers/cuda_9.0.176_win10_network-exe' -OutFile 'C:\temp\cuda_9.0.176_win10_network-exe.exe'
        Start-Process -Wait -FilePath 'C:\temp\cuda_9.0.176_win10_network-exe.exe' -ArgumentList '-s compiler_9.0 nvml_dev_9.0'
      if: matrix.vm == 'openj9'

    - name: Install Freemarker
      run: |
        New-Item -Path C:\ -Name 'openjdk' -ItemType 'directory'
        Invoke-WebRequest 'https://repo.maven.apache.org/maven2/freemarker/freemarker/2.3.8/freemarker-2.3.8.jar' -OutFile 'C:\openjdk\freemarker.jar'
      if: matrix.vm == 'openj9'

    - name: Cygwin git configuration
      shell: bash
      run: mkdir $HOME && git config --system core.autocrlf false

    - uses: actions/checkout@v2

    - name: Build Windows
      run: |
        set JAVA_HOME=%JAVA_HOME_11_X64%
        bash build-farm/make-adopt-build-farm.sh
      shell: cmd
      env:
        JAVA_TO_BUILD: ${{ matrix.version }}
        ARCHITECTURE: x64
        VARIANT: ${{ matrix.vm }}
        TARGET_OS: windows
        FILENAME: OpenJDK.tar.gz
        JDK7_BOOT_DIR: ${{ steps.setup-java.outputs.path }}